name: Manual Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version number (e.g. 1.4.2)'
        required: true
        default: '1.4.2'
      create_release:
        description: 'Create GitHub Release'
        required: true
        default: 'true'
        type: choice
        options:
        - 'true'
        - 'false'

jobs:
  manual-release:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller>=5.0.0
        
    - name: Update version (if needed)
      run: |
        $version = "${{ github.event.inputs.version }}"
        echo "=== Updating version to $version ==="
        python scripts/version_manager.py $version --force

    - name: Build executable
      run: |
        echo "=== Building executable ==="
        python scripts/build.py
        
    - name: Create release package
      run: |
        $version = "${{ github.event.inputs.version }}"
        $zipName = "BadgePatternTool-v$version-Windows-Manual.zip"
        
        mkdir manual-release
        Copy-Item "dist/BadgePatternTool.exe" "manual-release/"
        Copy-Item "dist/使用说明.md" "manual-release/" -ErrorAction SilentlyContinue
        Copy-Item "dist/CHANGELOG.md" "manual-release/" -ErrorAction SilentlyContinue
        
        if (Test-Path "dist/docs") {
          Copy-Item "dist/docs" "manual-release/" -Recurse
        }
        
        Compress-Archive -Path "manual-release/*" -DestinationPath $zipName
        echo "ZIP_NAME=$zipName" >> $env:GITHUB_ENV

    - name: Generate release notes
      if: github.event.inputs.create_release == 'true'
      run: |
        echo "=== Generating Release Notes ==="
        $version = "v${{ github.event.inputs.version }}"
        $buildTime = "${{ github.run_id }}"
        python scripts/generate_release_notes.py $version release_notes.md --manual --build-time=$buildTime --skip-changelog
        echo "Release notes generated for manual release"

    - name: Create Release (if requested)
      if: github.event.inputs.create_release == 'true'
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ github.event.inputs.version }}
        name: BadgePatternTool v${{ github.event.inputs.version }} (Manual Release)
        body_path: release_notes.md
        files: |
          ${{ env.ZIP_NAME }}
          dist/BadgePatternTool.exe
        draft: false
        prerelease: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: Manual-Release-v${{ github.event.inputs.version }}
        path: |
          dist/
          manual-release/
          *.zip
        retention-days: 7
