name: Build and Release

on:
  push:
    tags:
      - 'v*'  # 当推送以v开头的标签时触发（如v1.4.1）
  workflow_dispatch:  # 允许手动触发

# 添加必要的权限
permissions:
  contents: write  # 允许创建release和上传文件
  actions: read    # 允许读取actions
  checks: write    # 允许写入检查结果

jobs:
  build-and-release:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'  # 使用稳定的Python版本
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller>=5.0.0
        
    - name: Verify project structure
      run: |
        echo "=== 项目结构检查 ==="
        Get-ChildItem -Force
        echo "=== src目录 ==="
        Get-ChildItem src/ -Force
        echo "=== assets目录 ==="
        if (Test-Path "src/assets") { Get-ChildItem src/assets/ -Force } else { echo "assets目录不存在" }
        
    - name: Run CI tests
      run: |
        echo "=== 运行CI安全测试 ==="
        python scripts/ci_tests.py
        
    - name: Build executable
      run: |
        echo "=== 开始构建 ==="
        python scripts/build.py
        
    - name: Verify build output
      run: |
        echo "=== 构建结果检查 ==="
        Get-ChildItem dist/ -Force
        if (Test-Path "dist/BadgePatternTool.exe") {
          $size = (Get-Item "dist/BadgePatternTool.exe").Length / 1MB
          echo "✅ 可执行文件大小: $([math]::Round($size, 1)) MB"
        } else {
          echo "❌ 可执行文件未找到"
          exit 1
        }
        
    - name: Extract version info
      id: version
      run: |
        $version = "${{ github.ref_name }}"
        $versionNumber = $version -replace '^v', ''
        echo "VERSION=$version" >> $env:GITHUB_ENV
        echo "VERSION_NUMBER=$versionNumber" >> $env:GITHUB_ENV
        echo "version=$version" >> $env:GITHUB_OUTPUT
        echo "version_number=$versionNumber" >> $env:GITHUB_OUTPUT

    - name: Create release files
      run: |
        echo "=== 准备发布文件 ==="
        # 创建发布目录
        mkdir release

        # 复制主要文件到发布目录
        Copy-Item "dist/BadgePatternTool.exe" "release/"
        Copy-Item "dist/README.md" "release/" -ErrorAction SilentlyContinue
        Copy-Item "dist/User_Guide.txt" "release/" -ErrorAction SilentlyContinue

        # 使用环境变量中的版本号
        $version = "${{ env.VERSION }}"
        $zipName = "BadgePatternTool-$version-Windows.zip"
        $exeName = "BadgePatternTool-$version.exe"

        # 创建ZIP文件（包含所有文件）
        Compress-Archive -Path "release/*" -DestinationPath $zipName

        # 复制单独的exe文件（重命名以区分）
        Copy-Item "dist/BadgePatternTool.exe" $exeName

        echo "=== 发布文件列表 ==="
        echo "ZIP包内容:"
        Get-ChildItem release/ -Force
        echo "发布文件:"
        Get-ChildItem *.zip, *.exe -Force

        # 验证文件是否存在
        if (Test-Path $zipName) {
          echo "✅ ZIP文件创建成功: $zipName"
        } else {
          echo "❌ ZIP文件创建失败"
          exit 1
        }

        if (Test-Path $exeName) {
          echo "✅ EXE文件创建成功: $exeName"
        } else {
          echo "❌ EXE文件创建失败"
          exit 1
        }

        # 设置环境变量供后续步骤使用
        echo "ZIP_NAME=$zipName" >> $env:GITHUB_ENV
        echo "EXE_NAME=$exeName" >> $env:GITHUB_ENV
        
    - name: Generate release notes
      id: release_notes
      run: |
        $version = "${{ env.VERSION }}"
        $releaseNotes = @"
        # BadgePatternTool $version

        ## 📦 下载选项

        **推荐下载方式**:
        - 🎯 **单文件版**: `BadgePatternTool-$version.exe` (直接运行，无需解压)
        - 📦 **完整包**: `BadgePatternTool-$version-Windows.zip` (包含说明文档)

        **系统要求**: Windows 7/8/10/11 (64位)

        ## ✨ 主要功能

        - 🎨 图片批量导入和圆形裁剪
        - ⚙️ 可配置徽章尺寸（32mm/58mm/75mm）
        - 📐 智能A4排版（网格/紧凑模式）
        - 🖼️ 交互式图片编辑
        - 📄 多页面自动分页
        - 🖨️ 高质量导出和直接打印

        ## 🚀 快速开始

        **单文件版**: 直接双击 `BadgePatternTool-$version.exe` 运行

        **完整包**:
        1. 解压 `BadgePatternTool-$version-Windows.zip`
        2. 双击运行 `BadgePatternTool.exe`
        3. 查看 `README.md` 和 `User_Guide.txt` 了解详细使用方法

        ## 📋 更新内容

        查看 [CHANGELOG.md](https://github.com/fenglyu1314/BadgePatternTool/blob/main/CHANGELOG.md) 了解详细更新内容。

        ## 🆘 问题反馈

        如遇到问题，请在 [Issues](https://github.com/fenglyu1314/BadgePatternTool/issues) 中反馈。
        "@
        
        # 保存到文件
        $releaseNotes | Out-File -FilePath "release_notes.md" -Encoding UTF8
        
        # 设置输出
        echo "RELEASE_NOTES<<EOF" >> $env:GITHUB_ENV
        echo $releaseNotes >> $env:GITHUB_ENV
        echo "EOF" >> $env:GITHUB_ENV
        
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.ref_name }}
        name: BadgePatternTool ${{ env.VERSION }}
        body: ${{ env.RELEASE_NOTES }}
        files: |
          ${{ env.ZIP_NAME }}
          ${{ env.EXE_NAME }}
        draft: false
        prerelease: false
        generate_release_notes: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: BadgePatternTool-${{ env.VERSION }}-artifacts
        path: |
          dist/
          release/
          *.zip
          *.exe
        retention-days: 30
